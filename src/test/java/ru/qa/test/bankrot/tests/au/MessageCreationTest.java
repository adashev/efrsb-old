package ru.qa.test.bankrot.tests.au;

import io.qameta.allure.Description;
import org.testng.annotations.DataProvider;
import ru.qa.test.bankrot.tests.TestBase;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class MessageCreationTest extends TestBase {
  @DataProvider
  public Iterator<Object[]> validMessages() {
    List<Object[]> list = new ArrayList<Object[]>();
    list.add(new Object[] {"Сообщение о судебном акте", 0, 0});
    list.add(new Object[] {"Уведомление о получении требований кредитора", 1, 0});
    list.add(new Object[] {"Иное сообщение", 2, 0});
    list.add(new Object[] {"Аннулирование ранее опубликованного сообщения", 3, 0});
    list.add(new Object[] {"Опровержение по решению суда опубликованных ранее сведений", 4, 0});
    list.add(new Object[] {"Сообщение о дисквалификации арбитражного управляющего", 4, 1});
    list.add(new Object[] {"Сообщение о собрании кредиторов", 5, 0});
    list.add(new Object[] {"Сообщение о результатах проведения собрания кредиторов", 5, 1});
    list.add(new Object[] {"Уведомление о проведении комитета кредиторов", 5, 2});
    list.add(new Object[] {"Сообщение о результатах проведения комитета кредиторов", 5, 3});
    list.add(new Object[] {"Сведения о принятии заявления о признании должника банкротом", 6, 0});
    list.add(new Object[] {"Уведомление о проведении собрания участников строительства", 6, 1});
    list.add(new Object[] {"Сообщение о результатах проведения собрания участников строительства", 6, 2});
    list.add(new Object[] {"Извещение участникам строительства о возможности предъявления денежного требования", 6, 3});
    list.add(new Object[] {"Сообщение о переходе права собственности на объект незавершенного строительства и прав на земельный участок", 6, 4});
    list.add(new Object[] {"Сведения о результатах инвентаризации имущества должника", 7, 0});
    list.add(new Object[] {"Отчет оценщика об оценке имущества должника", 7, 1});
    list.add(new Object[] {"Уведомление о передаче страхового портфеля страховой организации", 7, 2});
    list.add(new Object[] {"Сведения о кредитной организации, в которой открыт специальный банковский счет должника", 7, 3});
    list.add(new Object[] {"Объявление о проведении торгов", 8, 0});
    list.add(new Object[] {"Сообщение о результатах торгов", 8, 1});
    list.add(new Object[] {"Об определении начальной продажной цены, утверждении порядка и условий проведения торгов по реализации предмета залога, порядка и условий обеспечения сохранности предмета залога", 8, 2});
    list.add(new Object[] {"Сообщение об отмене сообщения об объявлении торгов или сообщения о результатах торгов", 8, 3});
    list.add(new Object[] {"Сообщение об изменении объявления о проведении торгов", 8, 4});
    list.add(new Object[] {"Сведения о заключении договора купли-продажи", 8, 5});
    list.add(new Object[] {"Объявление о наличии непроданного имущества и праве собственника имущества должника – унитарного предприятия, учредителей (участников) должника получить такое имущество", 8, 6});
    list.add(new Object[] {"Предложение о погашении требований кредиторов путем предоставления отступного", 8, 7});
    list.add(new Object[] {"Уведомление о проведении собрания работников, бывших работников должника", 9, 0});
    list.add(new Object[] {"Сведения о решениях, принятых собранием работников, бывших работников должника", 9, 1});
    list.add(new Object[] {"Заявление о признании сделки должника недействительной", 10, 0});
    list.add(new Object[] {"Судебный акт по результатам рассмотрения заявления об оспаривании сделки должника", 10, 1});
    list.add(new Object[] {"Судебный акт по результатам пересмотра рассмотрения заявления об оспаривании сделки должника", 10, 2});
    list.add(new Object[] {"Заявление о привлечении контролирующих должника лиц, а также иных лиц, к ответственности в виде возмещения убытков", 11, 0});
    list.add(new Object[] {"Судебный акт по результатам рассмотрения заявления о привлечении контролирующих должника лиц, а также иных лиц, к ответственности в виде возмещения убытков", 11, 1});
    list.add(new Object[] {"Судебный акт по результатам пересмотра рассмотрения заявления о привлечении контролирующих должника лиц, а также иных лиц, к ответственности в виде возмещения убытков", 11, 2});
    list.add(new Object[] {"Заявление о привлечении контролирующих должника лиц к субсидиарной ответственности", 11, 3});
    list.add(new Object[] {"Судебный акт по результатам рассмотрения заявления о привлечении контролирующих должника лиц к субсидиарной ответственности", 11, 4});
    list.add(new Object[] {"Судебный акт по результатам пересмотра рассмотрения заявления о привлечении контролирующих должника лиц к субсидиарной ответственности", 11, 5});
    list.add(new Object[] {"Сообщение о праве кредитора выбрать способ распоряжения правом требования о привлечении к субсидиарной ответственности", 11, 6});
    list.add(new Object[] {"Предложение о присоединении к заявлению о привлечении контролирующих лиц должника к субсидиарной ответственности", 11, 7});
    list.add(new Object[] {"Решение о назначении временной администрации", 12, 0});
    list.add(new Object[] {"Сообщение о намерении исполнить обязательства кредитной организации", 12, 1});
    list.add(new Object[] {"Сообщение о признании исполнения заявителем обязательств кредитной организации несостоявшимся", 12, 2});
    list.add(new Object[] {"Сообщение об исполнении обязательств кредитной организации", 12, 3});
    list.add(new Object[] {"Сведения о смете текущих расходов кредитной организации или иной финансовой организации", 12, 4});
    list.add(new Object[] {"Сведения о скорректированной смете текущих расходов кредитной организации или иной финансовой организации", 12, 5});
    list.add(new Object[] {"Сведения о порядке и сроках расчетов с кредиторами", 12, 6});
    list.add(new Object[] {"Информация о ходе конкурсного производства", 12, 7});
    list.add(new Object[] {"Сведения об исполнении сметы текущих расходов и стоимости нереализованного имущества кредитной организации", 12, 8});
    list.add(new Object[] {"Сообщения о начале расчетов", 12, 9});
    list.add(new Object[] {"Сведения о ходе инвентаризации имущества должника", 12, 10});
    list.add(new Object[] {"Сведения о порядке и месте ознакомления с проектом плана реструктуризации", 13, 0});
    list.add(new Object[] {"Сведения о порядке и месте ознакомления с отчетом о результатах исполнения плана реструктуризации", 13, 1});
    list.add(new Object[] {"Сообщение о наличии или об отсутствии признаков преднамеренного или фиктивного банкротства", 14, 0});
    list.add(new Object[] {"Сообщение об отмене сообщения о наличии или об отсутствии признаков преднамеренного или фиктивного банкротства", 14, 1});
    list.add(new Object[] {"Сообщение об изменении сообщения о наличии или об отсутствии признаков преднамеренного или фиктивного банкротства", 14, 2});
    return list.iterator();
  }

//  @Test(dataProvider = "validMessages")   // , enabled = false
  @Description("Тест создания сообщений всех типов в АРМ АУ")
  public void testMessageCreation(String typeMess, int numGroup, int numMessage) throws InterruptedException {
    app.getMessagesListPage().clickAddMessage();
    app.getNewMessagePage().selectMessageOptions(numGroup);
    if (app.getNewMessagePage().listMessage.size() == 0) {// если мы имеем дело с отдель. типом сообщений
      app.getNewMessagePage().clickNextButton();
      app.getCreateMessagePage().createAndSaveMessage(typeMess);
    } else {  //если мы имеем дело с группой типов сообщений, то проходим по всей группе в цикле
      app.getNewMessagePage().selectMessageAndGoNext(numGroup, numMessage);
      app.getCreateMessagePage().createAndSaveMessage(typeMess);
    }
  }
}

